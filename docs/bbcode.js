(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}();var e,r=function(){function t(){}return t.prototype.tagAliases=function(){return[]},t.prototype.match=function(t){if(t===this.tagName())return!0;for(var e=0,r=this.tagAliases();e<r.length;e++)if(t===r[e])return!0;return!1},t.prototype.isSelfClose=function(){return!1},t.prototype.useCustomParser=function(t){return!1},t.prototype.allowParents=function(t){return[]},t.prototype.parseStackToHtml=function(t,e,r,o,n,i){return""},t.prototype.splitArgs=function(t){return t.split(";")},t.prototype.combineAttributes=function(e){var r="";for(var o in e)if(e.hasOwnProperty(o)){var n=e[o];n&&(r+=o+'="'+t.filterXSS(n)+'" ')}return r&&(r=" "+r),r},t.prototype.checkSize=function(t,e){return void 0===e&&(e="px"),t?t.match(/^\d{1,4}(\.\d{1,4})?(px|%)$/g)?t:t.match(/^\d{1,4}(\.\d{1,4})?$/g)?""+parseFloat(t)+e:"":""},t.prototype.checkWhitelistValue=function(t,e){for(var r=0,o=e;r<o.length;r++)if(t===o[r])return t;return""},t.prototype.checkColor=function(t){return t?(t=t.replace(/ +/g,"")).match(/^((#[0-9a-fA-F]{3})|(#[0-9a-fA-F]{6})|([a-zA-Z]{1,20}))$/g)||t.match(/^(rgb\(\d{1,3}(,\d{1,3}){2}\))|(rgba\(\d{1,3}(,\d{1,3}){2},(0\.)?\d{1,2}\))$/g)?t:t.match(/^[0-9a-fA-F]{6}$/g)?"#"+t:"":""},t.prototype.checkAlign=function(t){return!t||"left"!==t&&"right"!==t&&"center"!==t&&"justify"!==t&&"top"!==t&&"bottom"!==t&&"middle"!==t&&"baseline"!==t?"":t},t.prototype.combineStyles=function(t){var e="";for(var r in t)if(t.hasOwnProperty(r)){var o=t[r];o&&(e+=r+":"+o+";")}return e},t.prototype.combineArgs=function(t){for(var e=!1,r="",o=t.length-1;o>=0;o--){var n=t[o];n&&(r=n+r,e=!0),(e||n)&&o>0&&(r=";"+r)}return r&&(r="="+r),r},t.unfilteredXSS=function(t){return"string"!=typeof t?String(t):t.replace(/\u200B/g,"").replace(/&amp;/g,"&").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&quot;/g,'"').replace(/&#39;/g,"'").replace(/&nbsp;/g," ")},t.filterXSS=function(t){return"string"!=typeof t?String(t):t.replace(/\u200B/g,"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/ /g,"&nbsp;")},t}(),o=(e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(t,r)},function(t,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}),n=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o(e,t),e.prototype.tagName=function(){return"compatible"},e.prototype.match=function(t){return!1},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r||!1},e.prototype.handleStyle=function(t,e,r,o,n,i){var a,c,s,l;if(void 0===i&&(i=!1),a="string"==typeof n?document.createElement("span"):n,t.classList.contains("quote")){var u=document.createElement("blockquote");u.setAttribute("data-tag","quote"),c?(c.appendChild(u),c=u):(c=u,a.appendChild(c))}if(t.style.textAlign)switch(t.style.textAlign){case"left":case"right":case"center":var p=document.createElement("div");p.setAttribute("data-tag","align"),p.style.textAlign=t.style.textAlign,c?(c.appendChild(p),c=p):(c=p,a.appendChild(c))}if("bold"===t.style.fontWeight){var f=document.createElement("b");c?(c.appendChild(f),c=f):(c=f,a.appendChild(c))}if(t.style.color&&(s=this.checkColor(t.style.color))&&((l=document.createElement("span")).setAttribute("data-color",s),l.setAttribute("data-tag","color"),l.style.color=s,c?(c.appendChild(l),c=l):(c=l,a.appendChild(c))),(t.style.background||t.style.backgroundColor)&&(s=this.checkColor(t.style.backgroundColor?t.style.backgroundColor:t.style.background))&&((l=document.createElement("span")).setAttribute("data-color",s),l.setAttribute("data-tag","bgcolor"),l.style.backgroundColor=s,c?(c.appendChild(l),c=l):(c=l,a.appendChild(c))),c){for(var y=0,d=Array.from(t.childNodes);y<d.length;y++){var h=d[y];c.appendChild(h)}return i?"\n"+e(a,r,o)+"\n":e(a,r,o)}return!1},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t;switch(n.tagName.toLowerCase()){case"h4":case"span":return this.handleStyle(n,e,r,o,"span");case"p":case"div":return this.handleStyle(n,e,r,o,"div",!0);default:return!1}},e}(r),i=function(){function t(){this.TAG_HANDLER_LIST=[],this.compatible=new n}return t.prototype.transformAsIs=function(t,e,r){return"["+(e?t+"="+e:t)+"]"+r+"[/"+t+"]"},t.prototype.transformTag=function(t,e,r,o){null==e&&(e=""),t=t.substring(1);var n=this.getHandler(t);if(n){var i=n.encodeToHtml(t,r,e,o);if("string"==typeof i)return i}return this.transformAsIs(t,r,e)},t.prototype.registerTagHandler=function(t){this.TAG_HANDLER_LIST.push(t)},t.prototype.getHandler=function(t){for(var e=0,r=this.TAG_HANDLER_LIST;e<r.length;e++){var o=r[e];if(o.match(t))return o}return null},t.prototype.bbcode2html=function(e,o){void 0===o&&(o=!1),e=e.replace(/\u200B/g,"").replace(/\xC2\xA0/g," ");for(var n=[],i={},a=t.STATE_NORMAL,c="",s=0,l=0;l<e.length;l++){var u=e[l];switch(u){case"[":a===t.STATE_NORMAL&&l<e.length?(c.length>0&&n.push({type:t.TYPE_TEXT,value:r.filterXSS(c)}),c="[","/"===e[l+1]?(a=t.STATE_BBCODE_CLOSE_START,c+="/",l++):a=t.STATE_BBCODE_OPEN_START):a===t.STATE_BBCODE_OPEN_START||a===t.STATE_BBCODE_CLOSE_START?c.length>0&&(n.push({type:t.TYPE_TEXT,value:r.filterXSS(c)}),c="["):c+=u;break;case"]":if(a===t.STATE_BBCODE_OPEN_START){var p="",f="",y=c.indexOf("="),d=-1;if(y>0){var h=c.indexOf(" ");h<0||h>y?d=y:h>0&&h<y&&(d=h)}d>0?(f=c.substring(d+1),p=c.substring(0,d)):p=c;var g=p.substring(1),m=!1;if(T=this.getHandler(g)){var b=T.allowParents(g);if(b.length>0){for(var _=0,v=b;_<v.length;_++)if(i[v[_]]){m=!0;break}}else m=!0}m?(T.isSelfClose()?n.push({type:t.TYPE_TEXT,value:this.transformTag(p,"",f,o)}):(n.push({type:t.TYPE_BBCODE_OPEN,value:p,arg:r.filterXSS(f),customParser:T.useCustomParser(g),contentOffset:l+1}),T.useCustomParser(g)&&s++,i[g]=i[g]?i[g]+1:1),c=""):c+="]",a=t.STATE_NORMAL}else if(a===t.STATE_BBCODE_CLOSE_START){var T;if(p=c.substring(2),(T=this.getHandler(p))&&!T.isSelfClose()){if(s>0&&!T.useCustomParser(p)){n.push({type:t.TYPE_BBCODE_CLOSE,value:p}),c="",a=t.STATE_NORMAL;break}var w="",O=!1,E=[];t:for(;;){var S=n.pop();if(!S)break;switch(S.type){case t.TYPE_TEXT:E.push(S),w=S.value+w;break;case t.TYPE_BBCODE_OPEN:E.push(S);var A=S.value.substring(1);if(i[A]&&(i[A]=Math.max(i[A]-1,0)),p===A){S.customParser?(n.push({type:t.TYPE_TEXT,value:T.parseStackToHtml(E,e,S.contentOffset,l-c.length,this,o)}),s--):s>0?(n.push(S),n.push({type:t.TYPE_TEXT,value:w}),n.push({type:t.TYPE_BBCODE_CLOSE,value:p})):n.push({type:t.TYPE_TEXT,value:this.transformTag(S.value,w,S.arg,o)}),E=[],w="",O=!0;break t}w=this.transformTag(S.value,w,S.arg,o);break;case t.TYPE_BBCODE_CLOSE:E.push(S)}}O||(w+=c+"]"),w.length>0&&n.push({type:t.TYPE_TEXT,value:w}),c=""}else c+="]";a=t.STATE_NORMAL}else c+=u;break;case"\r":break;default:c+=u}}for(var C="",x=void 0;x=n.pop();)x.type===t.TYPE_BBCODE_OPEN?(c.length>0&&(C+=c,c=""),C=this.transformTag(x.value,C,x.arg,o)):x.type===t.TYPE_TEXT&&(C=x.value+C);return c.length>0&&(C+=r.filterXSS(c)),C.replace(/\n/g,"<br/>")},t.prototype.html2bbcode=function(t,e){for(var r="",o=0,n=Array.from((new DOMParser).parseFromString(t.replace(/\u200B/g,""),"text/html").getElementsByTagName("body")[0].childNodes);o<n.length;o++){var i=n[o];r+=this.resolveNode(i,e,{})}return r},t.prototype.resolveNode=function(t,e,r){var o="";Array.isArray(t)||(t=t instanceof NodeList||t instanceof HTMLCollection?Array.from(t):[t]);for(var n=0,i=t;n<i.length;n++){var a=i[n];switch(a.nodeType){case a.ELEMENT_NODE:var c=a;if("1"===c.getAttribute("data-cke-temp")||c.classList.contains("cke_widget_partial_mask"))break;if("br"===c.tagName.toLowerCase()){o+="\n";break}var s=c.getAttribute("data-tag");s||(s=c.tagName.toLowerCase());var l=this.getHandler(s);l||(l=this.compatible);var u=JSON.parse(JSON.stringify(r));o+=l.decodeFromHtml(c,this.resolveNode.bind(this),e,u)||this.resolveNode(Array.from(a.childNodes),e,u);break;case a.TEXT_NODE:o+=a.textContent.replace(/\r+/g,"")}}return o},t.STATE_NORMAL=0,t.STATE_BBCODE_OPEN_START=1,t.STATE_BBCODE_CLOSE_START=2,t.TYPE_TEXT=0,t.TYPE_BBCODE_OPEN=1,t.TYPE_BBCODE_CLOSE=2,t}(),a=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.tagName=function(){return"b"},e.prototype.tagAliases=function(){return["strong"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?"<"+this.tagName()+">"+r+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[b]"+e(t.childNodes,r,o)+"[/b]"},e}(r),s=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),l=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.tagName=function(){return"i"},e.prototype.tagAliases=function(){return["em"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?"<"+this.tagName()+">"+r+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[i]"+e(t.childNodes,r,o)+"[/i]"},e}(r),u=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),p=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return u(e,t),e.prototype.tagName=function(){return"color"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?(e=this.checkColor(e))?'<span data-color="'+e+'" data-tag="color" style="color: '+e+'">'+r+"</span>":r:""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getAttribute("data-color");return o.color===n?e(t.childNodes,r,o):(o.color=n,"[color="+n+"]"+e(t.childNodes,r,o)+"[/color]")},e}(r),f=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),y=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.sizeMap=[0,"12px","13px","16px","18px","24px","32px","48px"],e}return f(e,t),e.prototype.tagName=function(){return"size"},e.prototype.encodeToHtml=function(t,e,r,o){if(void 0===o&&(o=!1),!r)return"";if(!e)return r;var n="",i="";if(e.match(/^[1-7]$/g))n=this.sizeMap[parseInt(e)],i=e;else{if(!e.match(/^\d+(\.\d+)?px$/g))return r;n=parseFloat(e),(isNaN(n)||n<10||n>50)&&(n=13),i=n=String(n)+"px"}return'<span data-size="'+i+'" data-tag="size" style="font-size: '+n+'">'+r+"</span>"},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getAttribute("data-size");return o.size===n?e(t.childNodes,r,o):(o.size=n,"[size="+n+"]"+e(t.childNodes,r,o)+"[/size]")},e}(r),d=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),h=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return d(e,t),e.prototype.tagName=function(){return"mask"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?o?'<div data-tag="mask" class="mask" title="黑幕内容">'+r+"</div>":'<div class="mask"><span class="heimu" title="你知道的太多了">'+r+"</span></div>":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[mask]"+e(t.childNodes,r,o)+"[/mask]"},e}(r),g=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),m=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return g(e,t),e.prototype.tagName=function(){return"collapse"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),e&&0===e.indexOf("title=")&&(e=e.substring(6)),e||(e="点击展开"),o?'<div data-tag="collapse" class="collapse"><span>折叠标题：</span><div class="collapse-title">'+e+'</div><span>折叠内容：</span><div class="collapse-content">'+r+"</div></div>":'<div data-tag="collapse"><details><summary><b class="collapse-title">'+e+'</b></summary><div class="collapse-content">'+r+"</div></details></div>"},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getElementsByClassName("collapse-title"),i=n.length>0?n[0].textContent:"点击展开",a=t.getElementsByClassName("collapse-content");return"[collapse="+i+"]"+(a.length>0?e(a[0],r,o):"")+"[/collapse]"},e}(r),b=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),_=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return b(e,t),e.prototype.tagName=function(){return"dice"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?!!r.match(/^((\d{1,7})|(\d{0,7}d\d{1,7}))([+\-]((\d{1,7})|(\d{0,7}d\d{1,7})))*$/)&&(o?'<div data-tag="dice" class="dice"><span><b>骰子ROLL点表达式：</b></span><div class="dice-expression">'+r+"</div></div>":'<div class="dice">假装有骰娘：'+r+"="+Math.round(200*Math.random())+"</div>"):""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.getElementsByClassName("dice-expression"),i=n.length>0?n[0].textContent.replace(/\u200B/g,""):"";return!!i&&"[dice]"+i+"[/dice]"},e}(r),v=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),T=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return v(e,t),e.prototype.tagName=function(){return"u"},e.prototype.tagAliases=function(){return[]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?"<"+this.tagName()+">"+r+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[u]"+e(t.childNodes,r,o)+"[/u]"},e}(r),w=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),O=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return w(e,t),e.prototype.tagName=function(){return"del"},e.prototype.tagAliases=function(){return["s"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?"<s>"+r+"</s>":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[del]"+e(t.childNodes,r,o)+"[/del]"},e}(r),E=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),S=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return E(e,t),e.prototype.tagName=function(){return"img"},e.prototype.tagAliases=function(){return[]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,r,o){void 0===o&&(o=!1);var n=this.splitArgs(e),i=n[0]||"#",a=n.length>1?this.checkSize(n[1]):"",c=n.length>2?this.checkSize(n[2]):"",s=n.length>3?this.checkWhitelistValue(n[3],["left","right"]):"",l=this.combineAttributes({src:i,style:this.combineStyles({width:a,height:c,float:s})});return!!l&&"<img"+l+"/>"},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t,i=t.getAttribute("src"),a=this.checkSize(n.style.width),c=this.checkSize(n.style.height),s=this.checkWhitelistValue(n.style.float,["left","right"]),l=this.combineArgs([i,a,c,s]);return!!l&&"[img"+l+"]"},e}(r),A=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),C=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return A(e,t),e.prototype.tagName=function(){return"hr"},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),"<hr/>"},e.prototype.decodeFromHtml=function(t,e,r,o){return"[hr]"},e}(r),x=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),N=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return x(e,t),e.prototype.tagName=function(){return"url"},e.prototype.tagAliases=function(){return["a"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?(e?e.match(/^((https|http):\/\/)[^\s]+$/)||(e="http://"+e):e="#",'<a href="'+e+'" data-tag="url">'+r+"</a>"):""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=e(t.childNodes,r,o);return!!n&&"[url="+t.getAttribute("href")+"]"+n+"[/url]"},e}(r),P=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),k=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return P(e,t),e.prototype.tagName=function(){return"quote"},e.prototype.tagAliases=function(){return["blockquote"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?'<blockquote data-tag="quote"><p>'+r+"</p></blockquote>":""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[quote]"+e(t.childNodes,r,o)+"[/quote]"},e}(r),H=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),j=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return H(e,t),e.prototype.tagName=function(){return"h1"},e.prototype.tagAliases=function(){return["h2","h3"]},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r&&0!==r.replace(/ +/g,"").length?"<"+(t=t.toLowerCase())+">"+r+"</"+t+">":""},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.tagName.toLowerCase();return"["+n+"]"+e(t.childNodes,r,o)+"[/"+n+"]"},e}(r),B=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),L=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype.tagName=function(){return"list"},e.prototype.tagAliases=function(){return["ul","ol","li","*"]},e.prototype.allowParents=function(t){return"*"===t?["list"]:[]},e.prototype.useCustomParser=function(t){return"list"===t},e.prototype.parseStackToHtml=function(t,e,r,o,n,a){for(var c="",s="",l=[],u=0;u<t.length;u++){var p=t[u];switch(p.type){case i.TYPE_TEXT:s=p.value+s;break;case i.TYPE_BBCODE_OPEN:switch(p.value.substring(1)){case"list":var f=p.arg?"ol":"ul";s.trim()&&(s.endsWith("\n")&&(s+="&#8203;"),c="<li>"+s+"</li>"+c),c="<"+f+">"+c+"</"+f+">",s="";break;case"*":s.endsWith("\n")&&(s+="&#8203;"),c="<li>"+s+"</li>"+c,s="";break;default:s=n.transformTag(p.value,s,p.arg,a)+l.pop()}break;case i.TYPE_BBCODE_CLOSE:l.push(s),s=""}}return c},e.prototype.encodeToHtml=function(t,e,r,o){if(void 0===o&&(o=!1),!r)return"";var n="";switch(t){case"list":n=e?"ol":"ul";break;case"*":n="li";break;default:return r}return"<"+n+">"+r+"</"+n+">"},e.prototype.decodeFromHtml=function(t,e,r,o){switch(t.tagName.toLowerCase()){case"ul":return"[list]"+e(t.childNodes,r,o)+"[/list]";case"ol":return"[list=1]"+e(t.childNodes,r,o)+"[/list]";case"li":return"[*]"+e(t.childNodes,r,o);default:return!1}},e}(r),M=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),F=function(t){function e(){var r=t.call(this)||this;return e.typeMap.gonglue=e.typeMap.gonglve,e.typeGroupMap.gonglue=e.typeGroupMap.gonglve,r}return M(e,t),e.prototype.tagName=function(){return"notice"},e.prototype.tagAliases=function(){return["feedback","essence"]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,r,o,n){void 0===n&&(n=!1);var i=e.typeMap[r];return i?'<div data-tag="notice" data-notice-type="'+r+'" class="ambox"><table class="'+i.boxClass+'"><tbody><tr><td class="ambox-image"><img src="'+i.imgSrc+'"/></td><td class="ambox-notice"><span class="notice-bubble"><span class="notice-bubble-line"></span><i><b class="notice-speech">'+i.speech+'</b></i></span><br><span class="notice-text">'+i.notification+"</span></td></tr></tbody></table></div>":"[notice="+r+"]"},e.prototype.decodeFromHtml=function(t,r,o,n){var i=t.getAttribute("data-notice-type");return i&&e.typeMap[i]?"["+e.typeGroupMap[i]+"="+i+"]":""},e.typeMap={jutou:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/%E5%8F%AF%E9%9C%B2%E5%B8%8C%E5%B0%94_%E7%9C%8B%E4%B9%A6.png",boxClass:"ambox ambox-blue",speech:"博士，这几页我先帮你存着。",notification:"<b>本帖内容含剧透成分。</b>想要享受游戏探索/解谜乐趣的玩家请自行离开。"},rmt:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/20720aaac96bb824570ec92f651ffd7be84370b8.png",boxClass:"ambox ambox-blue",speech:"小心钱包（这句话是阿米娅说的）",notification:"<b>该帖子涉及现实货币交易。</b>请注意资产安全。"},predict:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/9156ab90139c76dbeb7420384c2ac691ab86097f.png",boxClass:"ambox ambox-blue",speech:"罗德岛的档案里没有诶...",notification:"<b>该帖子含推测内容。</b>请以官方消息为准，小心甄别。"},warn:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/20210626213733.png",boxClass:"ambox ambox-red",speech:"警告！博士你呀快被吊到舰桥上了哦...",notification:"<b>您的帖子已游走在违规边缘，请及时更改！</b>"},rec:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/4945b698209e2e73bc129a9026fc625a78ad8370.png",boxClass:"ambox ambox-violet",speech:"这个问题工程部已经知道啦！正在加班加点抢修！",notification:"<b>所反馈内容已记录</b>，请耐心等待。"},succ:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/02b4b87d4412f4a93d2f6d56f6479fd59918a7cc.png",boxClass:"ambox ambox-green",speech:"哼哼！这个问题已经解决啦！快称赞一下伟大的可露希尔！",notification:"<b>所反馈内容已解决</b>，请关注论坛公告。"},fail:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/32c0c66fb419b9ff5c8efb5ef967257627f8037d.png",boxClass:"ambox ambox-orange",speech:"啊呀...这个问题有点难...什么？伟大的可露希尔怎么可能不会！",notification:"所反馈内容由于各种原因<i>暂时</i>无法解决，请谅解。"},post:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"这篇文章写的好棒！要不偷偷的印出来卖钱吧？",notification:"您的帖子已达到加精标准，感谢您的付出！"},paint:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"这也太好看啦！能让我拿去观摩一下吗？嗯？不会偷偷卖钱啦！",notification:"您的帖子已达到加精标准，感谢您的付出！"},rpg:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"哦！这展开真是出乎意料啊！拍个电影吧！赚钱了我七你三！",notification:"您的帖子已达到加精标准，感谢您的付出！"},kaoju:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"什...什么！？这都能让你找出来的！挺不错的嘛！",notification:"您的帖子已达到加精标准，感谢您的付出！"},gonglve:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"居然比我可露希尔还要厉害...真有你的呀！",notification:"您的帖子已达到加精标准，感谢您的付出！"}},e.typeGroupMap={jutou:"notice",rmt:"notice",predict:"notice",warn:"notice",rec:"feedback",succ:"feedback",fail:"feedback",post:"essence",paint:"essence",rpg:"essence",kaoju:"essence",gonglve:"essence"},e}(r),D=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),z=function(t){function e(){var r=t.call(this)||this;return e.typeMap.video=e.typeMap.bvideo,e.typeGroupMap.video=e.typeGroupMap.bvideo,r}return D(e,t),e.prototype.tagName=function(){return"video"},e.prototype.tagAliases=function(){return["bvideo"]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,r,o,n){if(void 0===n&&(n=!1),r&&0===r.indexOf("bv=")&&(r=r.substring(3)),!r)return"";var i=e.typeMap[t];if(!i)return"["+t+"="+r+"]";var a=e.typeGroupMap[t];return n?'<div data-tag="video" class="video" data-video-type="'+a.type+'" data-video-value="'+r+'">视频来源：<span class="video-type">'+a.name+'</span><br/>视频ID：<span class="video-value">'+r+"</span></div>":'<div data-tag="video">'+i.replace(/__VIDEO_VALUE__/g,r)+"</div>"},e.prototype.decodeFromHtml=function(t,r,o,n){var i=t.getAttribute("data-video-type"),a=t.getAttribute("data-video-value");return i&&a&&e.typeMap[i]?"["+e.typeGroupMap[i].type+"="+a+"]":""},e.typeMap={bvideo:'<iframe src="//player.bilibili.com/player.html?bvid=__VIDEO_VALUE__&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="95%" height="600"></iframe>'},e.typeGroupMap={bvideo:{name:"B站",type:"bvideo"}},e}(r),I=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),X=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return I(e,t),e.prototype.tagName=function(){return"smile"},e.prototype.match=function(t){return!!t.match(/^s(-\d+)+$/g)},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),"["+t+"]"},e.prototype.decodeFromHtml=function(t,e,r,o){return!1},e}(r),Y=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),R=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Y(e,t),e.prototype.tagName=function(){return"bgcolor"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),r?(e=this.checkColor(e))?'<span data-color="'+e+'" data-tag="bgcolor" style="background-color: '+e+'">'+r+"</span>":r:""},e.prototype.decodeFromHtml=function(t,e,r,o){return"[bgcolor="+t.getAttribute("data-color")+"]"+e(t.childNodes,r,o)+"[/bgcolor]"},e}(r),q=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),G=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return q(e,t),e.prototype.tagName=function(){return"align"},e.prototype.tagAliases=function(){return["left","right","center"]},e.prototype.encodeToHtml=function(t,e,r,o){if(void 0===o&&(o=!1),!r)return"";var n;if("align"===t){if("left"!==e&&"right"!==e&&"center"!==e)return!1;n=e}else n=t;return'<div style="text-align: '+n+'" data-tag="align">'+r+"</div>"},e.prototype.decodeFromHtml=function(t,e,r,o){var n=t.style.textAlign;return"["+n+"]"+e(t.childNodes,r,o)+"[/"+n+"]"},e}(r),$=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),V=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return $(e,t),e.prototype.tagName=function(){return"table"},e.prototype.tagAliases=function(){return["tr","td"]},e.prototype.allowParents=function(t){switch(t){case"tr":return["table"];case"td":return["tr"];default:return[]}},e.prototype.encodeToHtml=function(t,e,r,o){void 0===o&&(o=!1);var n,i,a,c,s,l,u,p=this.splitArgs(e);switch(t){case"td":n=p.length>0?this.checkSize(p[0]):"",i=p.length>1?this.checkSize(p[1]):"",a=p.length>2?this.checkColor(p[2]):"",c=p.length>3?this.checkAlign(p[3]):"",s=p.length>4?this.checkAlign(p[4]):"";var f=p.length>5?parseInt(p[5])>1?parseInt(p[5]):0:"",y=p.length>6?parseInt(p[6])>1?parseInt(p[6]):0:"";return"<td"+this.combineAttributes({rowspan:f,colspan:y,style:this.combineStyles({width:n,height:i,"text-align":c,"vertical-align":s,"background-color":a})})+">"+r+"</td>";case"tr":return i=p.length>0?this.checkSize(p[0]):"",a=p.length>1?this.checkColor(p[1]):"","<tr"+this.combineAttributes({style:this.combineStyles({height:i,"background-color":a})})+">"+r+"</tr>";case"table":return n=p.length>0?this.checkSize(p[0]):"",i=p.length>1?this.checkSize(p[1]):"",a=p.length>2?this.checkColor(p[2]):"",c=p.length>3?this.checkAlign(p[3]):"",l=p.length>4?parseInt(p[4]):"",u=p.length>5?parseInt(p[5]):"","<table"+this.combineAttributes({align:c,cellspacing:l,cellpadding:u,style:this.combineStyles({width:n,height:i,"background-color":a})})+">"+r+"</table>";default:return!1}},e.prototype.decodeFromHtml=function(t,e,r,o){var n,i,a,c,s,l,u,p=t;switch(t.tagName.toLowerCase()){case"table":return n=this.checkSize(p.style.width),i=this.checkSize(p.style.height),a=this.checkColor(p.style.backgroundColor),c=this.checkAlign(p.align),l=parseInt(p.cellspacing),u=parseInt(p.cellpadding),"[table"+this.combineArgs([n,i,a,c,l,u])+"]"+e(t.childNodes,r,o)+"[/table]";case"tr":return i=this.checkSize(p.style.height),a=this.checkColor(p.style.backgroundColor),"[tr"+this.combineArgs([i,a])+"]"+e(t.childNodes,r,o)+"[/tr]";case"td":n=this.checkSize(p.style.width),i=this.checkSize(p.style.height),a=this.checkColor(p.style.backgroundColor),c=this.checkAlign(p.style.textAlign),s=this.checkAlign(p.style.verticalAlign);var f=parseInt(p.rowSpan)>1?parseInt(p.rowSpan):0,y=parseInt(p.colSpan)>1?parseInt(p.colSpan):0;return"[td"+this.combineArgs([n,i,a,c,s,f,y])+"]"+e(t.childNodes,r,o)+"[/td]";default:return!1}},e}(r),W=function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])})(e,r)};return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function o(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(o.prototype=r.prototype,new o)}}(),J=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return W(e,t),e.prototype.tagName=function(){return"code"},e.prototype.useCustomParser=function(t){return!0},e.prototype.parseStackToHtml=function(t,e,o,n,i,a){var c=r.filterXSS(e.substring(o,n));return a?'<div data-tag="code" class="code"><span>代码文本：</span><pre class="code-content">'+c+"</pre></div>":'<pre class="code">'+c+"</pre>"},e.prototype.encodeToHtml=function(t,e,r,o){return void 0===o&&(o=!1),!1},e.prototype.decodeFromHtml=function(t,e,o,n){var i=t.getElementsByClassName("code-content")[0].innerHTML;return i=i.replace(/<br\/?>/gi,"\n"),"[code]"+(i=r.unfilteredXSS(i))+"[/code]"},e}(r),U=new i;U.registerTagHandler(new c),U.registerTagHandler(new l),U.registerTagHandler(new T),U.registerTagHandler(new O),U.registerTagHandler(new p),U.registerTagHandler(new y),U.registerTagHandler(new h),U.registerTagHandler(new m),U.registerTagHandler(new _),U.registerTagHandler(new S),U.registerTagHandler(new C),U.registerTagHandler(new N),U.registerTagHandler(new k),U.registerTagHandler(new j),U.registerTagHandler(new L),U.registerTagHandler(new F),U.registerTagHandler(new z),U.registerTagHandler(new X),U.registerTagHandler(new R),U.registerTagHandler(new G),U.registerTagHandler(new V),U.registerTagHandler(new J),t.g.BBCODE={newParser:function(){return new i},defaultParser:U,bbcode2html:function(t,e){return void 0===e&&(e=!1),console.log("bbcode2html"),U.bbcode2html(t,e)},html2bbcode:function(t,e){return void 0===e&&(e=!1),console.log("html2bbcode"),U.html2bbcode(t,e)}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,