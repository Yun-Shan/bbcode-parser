(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}();var r,o=function(){function t(){this.TAG_HANDLER_MAP={},this.TAG_ALIASES_MAP={}}return t.prototype.transformAsIs=function(t,r,o){return"["+(r?t+"="+r:t)+"]"+o+"[/"+t+"]"},t.prototype.transformTag=function(t,r,o){null==r&&(r=""),t=t.substring(1);var n=this.TAG_ALIASES_MAP[t];if(!n)return this.transformAsIs(t,o,r);var e=this.TAG_HANDLER_MAP[n];if(e){var u=e.encodeToHtml(n,o,r);if("string"==typeof u)return u}return this.transformAsIs(n,o,r)},t.prototype.filterXSS=function(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")},t.prototype.registerTagHandler=function(t){this.TAG_HANDLER_MAP[t.tagName()]=t,this.TAG_ALIASES_MAP[t.tagName()]=t.tagName();for(var r=0,o=t.tagAliases();r<o.length;r++){var n=o[r];this.TAG_ALIASES_MAP[n]=t.tagName()}},t.prototype.getHandler=function(t){return t=this.TAG_ALIASES_MAP[t],this.TAG_HANDLER_MAP[t]},t.prototype.bbcode2html=function(r){for(var o=[],n=t.STATE_NORMAL,e="",u=0;u<r.length;u++){var i=r[u];switch(i){case"[":n===t.STATE_NORMAL&&u<r.length?(e.length>0&&(o.push({type:t.TYPE_TEXT,value:e.replace(/ /g,"&nbsp;")}),e=""),e="[","/"===r[u+1]?(n=t.STATE_BBCODE_CLOSE_START,e+="/",u++):n=t.STATE_BBCODE_OPEN_START):n===t.STATE_BBCODE_OPEN_START||n===t.STATE_BBCODE_CLOSE_START?e.length>0&&(o.push({type:t.TYPE_TEXT,value:e.replace(/ /g,"&nbsp;")}),e="["):e+=i;break;case"]":if(n===t.STATE_BBCODE_OPEN_START){var c="",a="",p=e.indexOf("=");p>0?(a=e.substring(p+1),c=e.substring(0,p)):c=e,(s=this.getHandler(c.substring(1)))?(s.isSelfClose()?o.push({type:t.TYPE_TEXT,value:this.transformTag(c,"",a.replace(/ /g,"&nbsp;"))}):o.push({type:t.TYPE_BBCODE_OPEN,value:c,arg:a.replace(/ /g,"&nbsp;")}),e=""):e+="]",n=t.STATE_NORMAL}else if(n===t.STATE_BBCODE_CLOSE_START){var s;if(c=e.substring(2),(s=this.getHandler(c))&&!s.isSelfClose()){var l="",f=!1;t:for(;;){var y=o.pop();if(!y)break;switch(y.type){case t.TYPE_TEXT:l=y.value+l;break;case t.TYPE_BBCODE_OPEN:if(y.value.substring(1)===e.substring(2)){o.push({type:t.TYPE_TEXT,value:this.transformTag(y.value,l,y.arg)}),l="",f=!0;break t}l=this.transformTag(y.value,l,y.arg)}}f||(l+=e+"]"),l.length>0&&o.push({type:t.TYPE_TEXT,value:l}),e="",n=t.STATE_NORMAL}else e+="]",n=t.STATE_NORMAL}else e+=i;break;case"\n":e+="<br/>";break;default:e+=i}}for(var _="",h=void 0;h=o.pop();)h.type===t.TYPE_BBCODE_OPEN?(e.length>0&&(_+=e,e=""),_=this.transformTag(h.value,_,h.arg)):h.type===t.TYPE_TEXT&&(_=h.value+_);return e.length>0&&(_+=e),console.log(_),_},t.prototype.html2bbcode=function(t){for(var r="",o=0,n=Array.from((new DOMParser).parseFromString(t,"text/html").getElementsByTagName("body")[0].childNodes);o<n.length;o++){var e=n[o];r+=this.resloveNode(e)}return r},t.prototype.resloveNode=function(t){var r="";Array.isArray(t)||(t=t instanceof NodeList||t instanceof HTMLCollection?Array.from(t):[t]);for(var o=0,n=t;o<n.length;o++){var e=n[o];switch(e.nodeType){case e.ELEMENT_NODE:var u=e;if("br"===u.tagName.toLowerCase()){r+="\n";break}var i=u.getAttribute("data-tag");i||(i=u.tagName.toLowerCase());var c=this.getHandler(i);r+=c?c.decodeFromHtml(u,this.resloveNode.bind(this)):this.resloveNode(Array.from(e.childNodes));break;case e.TEXT_NODE:r+=e.textContent.replace(/[\n\r ]/g,"")}}return r},t.STATE_NORMAL=0,t.STATE_BBCODE_OPEN_START=1,t.STATE_BBCODE_CLOSE_START=2,t.TYPE_TEXT=0,t.TYPE_BBCODE_OPEN=1,t}(),n=function(){function t(){}return t.prototype.isSelfClose=function(){return!1},t.prototype.splitArgs=function(t){return t.split(";")},t}(),e=(r=function(t,o){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(t,o)},function(t,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=t}r(t,o),t.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}),u=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return e(r,t),r.prototype.tagName=function(){return"b"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?"<"+this.tagName()+">"+o+"</"+this.tagName()+">":""},r.prototype.decodeFromHtml=function(t,r){return"[b]"+r(t.childNodes)+"[/b]"},r}(n),i=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),c=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return i(r,t),r.prototype.tagName=function(){return"i"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?"<"+this.tagName()+">"+o+"</"+this.tagName()+">":""},r.prototype.decodeFromHtml=function(t,r){return"[i]"+r(t.childNodes)+"[/i]"},r}(n),a=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),p=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return a(r,t),r.prototype.tagName=function(){return"color"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?r?(r.match(/^[0-9a-fA-F]{6}$/)&&(r="#"+r),'<font color="'+r+'" data-tag="color">'+o+"</font>"):o:""},r.prototype.decodeFromHtml=function(t,r){return"[color="+t.getAttribute("color")+"]"+r(t.childNodes)+"[/color]"},r}(n),s=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),l=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return s(r,t),r.prototype.tagName=function(){return"size"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?r&&r.match(/^[1-7]$/)?'<font size="'+r+'" data-tag="size">'+o+"</font>":o:""},r.prototype.decodeFromHtml=function(t,r){return"[size="+t.getAttribute("size")+"]"+r(t.childNodes)+"[/size]"},r}(n),f=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),y=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return f(r,t),r.prototype.tagName=function(){return"mask"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?'<div class="mask"><span class="heimu" title="你知道的太多了">'+o+"</span></div>":""},r.prototype.decodeFromHtml=function(t,r){return"[mask]"+r(t.childNodes)+"[/mask]"},r}(n),_=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),h=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return _(r,t),r.prototype.tagName=function(){return"collapse"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return r||(r="点击展开"),0===r.indexOf("title=")&&(r=r.substring(6)),'<div data-tag="collapse"><details><summary><b class="collapse-title">'+r+'</b></summary><div class="collapse-content">'+o+"</div></details></div>"},r.prototype.decodeFromHtml=function(t,r){var o=t.getElementsByClassName("collapse-title"),n=o.length>0?o[0].textContent:"点击展开",e=t.getElementsByClassName("collapse-content");return"[collapse="+n+"]"+(e.length>0?r(e[0]):"")+"[/collapse]"},r}(n),g=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),d=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return g(r,t),r.prototype.tagName=function(){return"dice"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?!!o.match(/^((\d+)|(\d*d\d+))(\+((\d+)|(\d*d\d+)))*$/)&&'<div class="dice">假装有骰娘：'+o+"="+Math.round(200*Math.random())+"</div>":""},r.prototype.decodeFromHtml=function(t,r){return"DICE TODO"},r}(n),T=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),m=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return T(r,t),r.prototype.tagName=function(){return"u"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?"<"+this.tagName()+">"+o+"</"+this.tagName()+">":""},r.prototype.decodeFromHtml=function(t,r){return"[u]"+r(t.childNodes)+"[/u]"},r}(n),O=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),A=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return O(r,t),r.prototype.tagName=function(){return"s"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?"<"+this.tagName()+">"+o+"</"+this.tagName()+">":""},r.prototype.decodeFromHtml=function(t,r){return"[s]"+r(t.childNodes)+"[/s]"},r}(n),b=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),E=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return b(r,t),r.prototype.tagName=function(){return"img"},r.prototype.tagAliases=function(){return[]},r.prototype.isSelfClose=function(){return!0},r.prototype.encodeToHtml=function(t,r,o){var n=this.splitArgs(r);return n[0],n.length>1&&n[1],n.length>2&&n[2],n.length>3&&n[3],n.length>4&&n[4],n.length>5&&n[5],"<"+this.tagName()+' src="'+r+'"/>'},r.prototype.decodeFromHtml=function(t,r){return"[img="+t.getAttribute("src")+"]"},r}(n),v=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),w=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return v(r,t),r.prototype.tagName=function(){return"hr"},r.prototype.tagAliases=function(){return[]},r.prototype.isSelfClose=function(){return!0},r.prototype.encodeToHtml=function(t,r,o){return"<hr/>"},r.prototype.decodeFromHtml=function(t,r){return"[hr]"},r}(n),N=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),P=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return N(r,t),r.prototype.tagName=function(){return"url"},r.prototype.tagAliases=function(){return[]},r.prototype.encodeToHtml=function(t,r,o){return o?(r?r.match(/^((https|http):\/\/)[^\s]+$/)||(r="http://"+r):r="#",'<a href="'+r+'" data-tag="url">'+o+"</a>"):""},r.prototype.decodeFromHtml=function(t,r){return"[url="+t.getAttribute("href")+"]"+t.textContent+"[/url]"},r}(n),S=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),H=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return S(r,t),r.prototype.tagName=function(){return"quote"},r.prototype.tagAliases=function(){return["blockquote"]},r.prototype.encodeToHtml=function(t,r,o){return o?'<blockquote data-tag="quote"><p>'+o+"</p></blockquote>":""},r.prototype.decodeFromHtml=function(t,r){return"[quote]"+r(t.childNodes)+"[/quote]"},r}(n),C=function(){var t=function(r,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])})(r,o)};return function(r,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function n(){this.constructor=r}t(r,o),r.prototype=null===o?Object.create(o):(n.prototype=o.prototype,new n)}}(),j=function(t){function r(){return null!==t&&t.apply(this,arguments)||this}return C(r,t),r.prototype.tagName=function(){return"h1"},r.prototype.tagAliases=function(){return["h2","h3"]},r.prototype.encodeToHtml=function(t,r,o){return o&&0!==o.trim().length?"<"+(t=t.toLowerCase())+">"+o+"</"+t+">":""},r.prototype.decodeFromHtml=function(t,r){var o=t.tagName.toLowerCase();return"["+o+"]"+r(t.childNodes)+"[/"+o+"]"},r}(n),B=new o;B.registerTagHandler(new u),B.registerTagHandler(new c),B.registerTagHandler(new m),B.registerTagHandler(new A),B.registerTagHandler(new p),B.registerTagHandler(new l),B.registerTagHandler(new y),B.registerTagHandler(new h),B.registerTagHandler(new d),B.registerTagHandler(new E),B.registerTagHandler(new w),B.registerTagHandler(new P),B.registerTagHandler(new H),B.registerTagHandler(new j),t.g.BBCODE={newParser:function(){return new o},defaultParser:B,bbcode2html:function(t){return B.bbcode2html(t)},html2bbcode:function(t){return B.html2bbcode(t)}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,