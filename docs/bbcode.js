(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}();var e,o=function(){function t(){}return t.prototype.tagAliases=function(){return[]},t.prototype.match=function(t){if(t===this.tagName())return!0;for(var e=0,o=this.tagAliases();e<o.length;e++)if(t===o[e])return!0;return!1},t.prototype.isSelfClose=function(){return!1},t.prototype.allowParents=function(t){return[]},t.prototype.splitArgs=function(t){return t.split(";")},t.prototype.combineAttributes=function(e){var o="";for(var r in e)if(e.hasOwnProperty(r)){var n=e[r];n&&(o+=r+'="'+t.filterXSS(n)+'" ')}return o&&(o=" "+o),o},t.prototype.checkSize=function(t){return t?t.match(/^\d{1,4}(\.\d{1,4})?(px|%)$/g)?t:t.match(/^\d{1,4}(\.\d{1,4})?$/g)?parseFloat(t)+"px":"":""},t.prototype.checkColor=function(t){return t?(t=t.replace(/ +/g,"")).match(/^(#[0-9a-fA-F]{6})|([a-zA-Z]{1,20})$/g)||t.match(/^(rgb\(\d{1,3}(,\d{1,3}){2}\))|(rgba\(\d{1,3}(,\d{1,3}){2},(0\.)?\d{1,2}\))$/g)?t:t.match(/^[0-9a-fA-F]{6}$/g)?"#"+t:"":""},t.prototype.checkAlign=function(t){return!t||"left"!==t&&"right"!==t&&"center"!==t&&"justify"!==t&&"top"!==t&&"bottom"!==t&&"middle"!==t&&"baseline"!==t?"":t},t.prototype.combineStyles=function(t){var e="";for(var o in t)if(t.hasOwnProperty(o)){var r=t[o];r&&(e+=o+":"+r+";")}return e},t.prototype.combineArgs=function(t){for(var e=!1,o="",r=t.length-1;r>=0;r--){var n=t[r];n&&(o=n+o,e=!0),(e||n)&&r>0&&(o=";"+o)}return o&&(o="="+o),o},t.filterXSS=function(t){return"string"!=typeof t?String(t):t.replace(/\u200B/g,"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/ /g,"&nbsp;")},t}(),r=(e=function(t,o){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(t,o)},function(t,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=t}e(t,o),t.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}),n=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return r(e,t),e.prototype.tagName=function(){return"compatible"},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o||!1},e.prototype.handleStyle=function(t,e,o,r,n){var i,a,c,s;if(void 0===n&&(n=!1),i="string"==typeof r?document.createElement("span"):r,t.classList.contains("quote")){var l=document.createElement("blockquote");l.setAttribute("data-tag","quote"),a?(a.appendChild(l),a=l):(a=l,i.appendChild(a))}if(t.style.textAlign)switch(t.style.textAlign){case"left":case"right":case"center":var p=document.createElement("div");p.setAttribute("data-tag","align"),p.style.textAlign=t.style.textAlign,a?(a.appendChild(p),a=p):(a=p,i.appendChild(a))}if("bold"===t.style.fontWeight){var u=document.createElement("b");a?(a.appendChild(u),a=u):(a=u,i.appendChild(a))}if(t.style.color&&(c=this.checkColor(t.style.color))&&((s=document.createElement("span")).setAttribute("data-color",c),s.setAttribute("data-tag","color"),s.style.color=c,a?(a.appendChild(s),a=s):(a=s,i.appendChild(a))),(t.style.background||t.style.backgroundColor)&&(c=this.checkColor(t.style.backgroundColor?t.style.backgroundColor:t.style.background))&&((s=document.createElement("span")).setAttribute("data-color",c),s.setAttribute("data-tag","bgcolor"),s.style.backgroundColor=c,a?(a.appendChild(s),a=s):(a=s,i.appendChild(a))),a){for(var f=0,y=Array.from(t.childNodes);f<y.length;f++){var d=y[f];a.appendChild(d)}return n?"\n"+e(i,o)+"\n":e(i,o)}return!1},e.prototype.decodeFromHtml=function(t,e,o){var r=t;switch(r.tagName.toLowerCase()){case"h4":case"span":return this.handleStyle(r,e,o,"span");case"p":case"div":return this.handleStyle(r,e,o,"div",!0);default:return!1}},e}(o),i=function(){function t(){this.TAG_HANDLER_LIST=[],this.compatible=new n}return t.prototype.transformAsIs=function(t,e,o){return"["+(e?t+"="+e:t)+"]"+o+"[/"+t+"]"},t.prototype.transformTag=function(t,e,o,r){null==e&&(e=""),t=t.substring(1);var n=this.getHandler(t);if(n){var i=n.encodeToHtml(t,o,e,r);if("string"==typeof i)return i}return this.transformAsIs(t,o,e)},t.prototype.registerTagHandler=function(t){this.TAG_HANDLER_LIST.push(t)},t.prototype.getHandler=function(t){for(var e=0,o=this.TAG_HANDLER_LIST;e<o.length;e++){var r=o[e];if(r.match(t))return r}return null},t.prototype.bbcode2html=function(e,r){void 0===r&&(r=!1);for(var n=[],i={},a=t.STATE_NORMAL,c="",s=0;s<e.length;s++){var l=e[s];switch(l){case"[":a===t.STATE_NORMAL&&s<e.length?(c.length>0&&n.push({type:t.TYPE_TEXT,value:o.filterXSS(c)}),c="[","/"===e[s+1]?(a=t.STATE_BBCODE_CLOSE_START,c+="/",s++):a=t.STATE_BBCODE_OPEN_START):a===t.STATE_BBCODE_OPEN_START||a===t.STATE_BBCODE_CLOSE_START?c.length>0&&(n.push({type:t.TYPE_TEXT,value:o.filterXSS(c)}),c="["):c+=l;break;case"]":if(a===t.STATE_BBCODE_OPEN_START){var p="",u="",f=c.indexOf("="),y=-1;if(f>0){var d=c.indexOf(" ");d<0||d>f?y=f:d>0&&d<f&&(y=d)}y>0?(u=c.substring(y+1),p=c.substring(0,y)):p=c;var g=p.substring(1),h=!1;if(v=this.getHandler(g)){var m=v.allowParents(g);if(m.length>0){for(var b=0,_=m;b<_.length;b++)if(i[_[b]]){h=!0;break}}else h=!0}h?(v.isSelfClose()?n.push({type:t.TYPE_TEXT,value:this.transformTag(p,"",u,r)}):(n.push({type:t.TYPE_BBCODE_OPEN,value:p,arg:u}),i[g]=i[g]?i[g]+1:1),c=""):c+="]",a=t.STATE_NORMAL}else if(a===t.STATE_BBCODE_CLOSE_START){var v;if(p=c.substring(2),(v=this.getHandler(p))&&!v.isSelfClose()){var w="",T=!1;t:for(;;){var O=n.pop();if(!O)break;switch(O.type){case t.TYPE_TEXT:w=O.value+w;break;case t.TYPE_BBCODE_OPEN:var A=O.value.substring(1);if(i[A]&&(i[A]=Math.max(i[A]-1,0)),p===A){n.push({type:t.TYPE_TEXT,value:this.transformTag(O.value,w,O.arg,r)}),w="",T=!0;break t}w=this.transformTag(O.value,w,O.arg,r)}}T||(w+=c+"]"),w.length>0&&n.push({type:t.TYPE_TEXT,value:w}),c=""}else c+="]";a=t.STATE_NORMAL}else c+=l;break;case"\r":break;default:c+=l}}for(var E="",C=void 0;C=n.pop();)C.type===t.TYPE_BBCODE_OPEN?(c.length>0&&(E+=c,c=""),E=this.transformTag(C.value,E,C.arg,r)):C.type===t.TYPE_TEXT&&(E=C.value+E);return c.length>0&&(E+=o.filterXSS(c)),E.replace(/\n/g,"<br/>")},t.prototype.html2bbcode=function(t,e){for(var o="",r=0,n=Array.from((new DOMParser).parseFromString(t,"text/html").getElementsByTagName("body")[0].childNodes);r<n.length;r++){var i=n[r];o+=this.resolveNode(i,e)}return o},t.prototype.resolveNode=function(t,e){var o="";Array.isArray(t)||(t=t instanceof NodeList||t instanceof HTMLCollection?Array.from(t):[t]);for(var r=0,n=t;r<n.length;r++){var i=n[r];switch(i.nodeType){case i.ELEMENT_NODE:var a=i;if("1"===a.getAttribute("data-cke-temp")||a.classList.contains("cke_widget_partial_mask"))break;if("br"===a.tagName.toLowerCase()){o+="\n";break}var c=a.getAttribute("data-tag");c||(c=a.tagName.toLowerCase());var s=this.getHandler(c);s||(s=this.compatible),o+=s.decodeFromHtml(a,this.resolveNode.bind(this),e)||this.resolveNode(Array.from(i.childNodes),e);break;case i.TEXT_NODE:o+=i.textContent.replace(/[\n\r ]/g,"")}}return o},t.STATE_NORMAL=0,t.STATE_BBCODE_OPEN_START=1,t.STATE_BBCODE_CLOSE_START=2,t.TYPE_TEXT=0,t.TYPE_BBCODE_OPEN=1,t}(),a=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),c=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return a(e,t),e.prototype.tagName=function(){return"b"},e.prototype.tagAliases=function(){return["strong"]},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?"<"+this.tagName()+">"+o+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,o){return"[b]"+e(t.childNodes,o)+"[/b]"},e}(o),s=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),l=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.tagName=function(){return"i"},e.prototype.tagAliases=function(){return["em"]},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?"<"+this.tagName()+">"+o+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,o){return"[i]"+e(t.childNodes,o)+"[/i]"},e}(o),p=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),u=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return p(e,t),e.prototype.tagName=function(){return"color"},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?(e=this.checkColor(e))?'<span data-color="'+e+'" data-tag="color" style="color: '+e+'">'+o+"</span>":o:""},e.prototype.decodeFromHtml=function(t,e,o){return"[color="+t.getAttribute("data-color")+"]"+e(t.childNodes,o)+"[/color]"},e}(o),f=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),y=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.sizeMap=[0,"12px","13px","16px","18px","24px","32px","48px"],e}return f(e,t),e.prototype.tagName=function(){return"size"},e.prototype.encodeToHtml=function(t,e,o,r){if(void 0===r&&(r=!1),!o)return"";if(!e)return o;var n="",i="";if(e.match(/^[1-7]$/g))n=this.sizeMap[parseInt(e)],i=e;else{if(!e.match(/^\d+(\.\d+)?px$/g))return o;n=parseFloat(e),(isNaN(n)||n<10||n>50)&&(n=13),i=n=String(n)+"px"}return'<span data-size="'+i+'" data-tag="size" style="font-size: '+n+'">'+o+"</span>"},e.prototype.decodeFromHtml=function(t,e,o){return"[size="+t.getAttribute("data-size")+"]"+e(t.childNodes,o)+"[/size]"},e}(o),d=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),g=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return d(e,t),e.prototype.tagName=function(){return"mask"},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?r?'<div data-tag="mask" class="mask" title="黑幕内容">'+o+"</div>":'<div class="mask"><span class="heimu" title="你知道的太多了">'+o+"</span></div>":""},e.prototype.decodeFromHtml=function(t,e,o){return"[mask]"+e(t.childNodes,o)+"[/mask]"},e}(o),h=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),m=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return h(e,t),e.prototype.tagName=function(){return"collapse"},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),e&&0===e.indexOf("title=")&&(e=e.substring(6)),e||(e="点击展开"),r?'<div data-tag="collapse" class="collapse"><span>折叠标题：</span><div class="collapse-title">'+e+'</div><span>折叠内容：</span><div class="collapse-content">'+o+"</div></div>":'<div data-tag="collapse"><details><summary><b class="collapse-title">'+e+'</b></summary><div class="collapse-content">'+o+"</div></details></div>"},e.prototype.decodeFromHtml=function(t,e,o){var r=t.getElementsByClassName("collapse-title"),n=r.length>0?r[0].textContent:"点击展开",i=t.getElementsByClassName("collapse-content");return"[collapse="+n+"]"+(i.length>0?e(i[0],o):"")+"[/collapse]"},e}(o),b=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),_=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return b(e,t),e.prototype.tagName=function(){return"dice"},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?!!o.match(/^((\d{1,7})|(\d{0,7}d\d{1,7}))([+\-]((\d{1,7})|(\d{0,7}d\d{1,7})))*$/)&&(r?'<div data-tag="dice" class="dice"><span><b>骰子ROLL点表达式：</b></span><div class="dice-expression">'+o+"</div></div>":'<div class="dice">假装有骰娘：'+o+"="+Math.round(200*Math.random())+"</div>"):""},e.prototype.decodeFromHtml=function(t,e,o){var r=t.getElementsByClassName("dice-expression"),n=r.length>0?r[0].textContent.replace(/\u200B/g,""):"";return!!n&&"[dice]"+n+"[/dice]"},e}(o),v=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),w=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return v(e,t),e.prototype.tagName=function(){return"u"},e.prototype.tagAliases=function(){return[]},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?"<"+this.tagName()+">"+o+"</"+this.tagName()+">":""},e.prototype.decodeFromHtml=function(t,e,o){return"[u]"+e(t.childNodes,o)+"[/u]"},e}(o),T=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),O=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return T(e,t),e.prototype.tagName=function(){return"del"},e.prototype.tagAliases=function(){return["s"]},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?"<s>"+o+"</s>":""},e.prototype.decodeFromHtml=function(t,e,o){return"[del]"+e(t.childNodes,o)+"[/del]"},e}(o),A=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),E=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return A(e,t),e.prototype.tagName=function(){return"img"},e.prototype.tagAliases=function(){return[]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,o,r){void 0===r&&(r=!1);var n=this.splitArgs(e),i=n[0]||"#",a=n.length>1?parseInt(n[1]):"",c=n.length>2?parseInt(n[2]):"",s='<img src="'+i+'"',l="";switch(a>0&&(l+="width:"+a+"px;"),c>0&&(l+="height:"+c+"px;"),n.length>3?n[3]:""){case"left":l+="float:left;";break;case"right":l+="float:right;"}return l&&(s+=' style="'+l+'"'),s+"/>"},e.prototype.decodeFromHtml=function(t,e,o){var r=t,n=t.getAttribute("src"),i=parseInt(r.style.width),a=parseInt(r.style.height),c=r.style.float,s=this.combineArgs([n,i,a,c]);return s||(s="=#"),"[img"+s+"]"},e}(o),C=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),S=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return C(e,t),e.prototype.tagName=function(){return"hr"},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),"<hr/>"},e.prototype.decodeFromHtml=function(t,e,o){return"[hr]"},e}(o),x=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),N=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return x(e,t),e.prototype.tagName=function(){return"url"},e.prototype.tagAliases=function(){return["a"]},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?(e?e.match(/^((https|http):\/\/)[^\s]+$/)||(e="http://"+e):e="#",'<a href="'+e+'" data-tag="url">'+o+"</a>"):""},e.prototype.decodeFromHtml=function(t,e,o){var r=e(t.childNodes,o);return!!r&&"[url="+t.getAttribute("href")+"]"+r+"[/url]"},e}(o),H=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),k=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return H(e,t),e.prototype.tagName=function(){return"quote"},e.prototype.tagAliases=function(){return["blockquote"]},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?'<blockquote data-tag="quote"><p>'+o+"</p></blockquote>":""},e.prototype.decodeFromHtml=function(t,e,o){return"[quote]"+e(t.childNodes,o)+"[/quote]"},e}(o),j=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),P=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return j(e,t),e.prototype.tagName=function(){return"h1"},e.prototype.tagAliases=function(){return["h2","h3"]},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o&&0!==o.replace(/ +/g,"").length?"<"+(t=t.toLowerCase())+">"+o+"</"+t+">":""},e.prototype.decodeFromHtml=function(t,e,o){var r=t.tagName.toLowerCase();return"["+r+"]"+e(t.childNodes,o)+"[/"+r+"]"},e}(o),B=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),M=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return B(e,t),e.prototype.tagName=function(){return"list"},e.prototype.tagAliases=function(){return["ul","ol","li","*"]},e.prototype.allowParents=function(t){return"*"===t?["list"]:[]},e.prototype.encodeToHtml=function(t,e,o,r){if(void 0===r&&(r=!1),!o)return"";var n="";switch(t){case"list":n=e?"ol":"ul";break;case"*":n="li";break;default:return o}return"<"+n+">"+o+"</"+n+">"},e.prototype.decodeFromHtml=function(t,e,o){switch(t.tagName.toLowerCase()){case"ul":return"[list]"+e(t.childNodes,o)+"[/list]";case"ol":return"[list=1]"+e(t.childNodes,o)+"[/list]";case"li":return"[*]"+e(t.childNodes,o);default:return!1}},e}(o),F=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),L=function(t){function e(){var o=t.call(this)||this;return e.typeMap.gonglue=e.typeMap.gonglve,e.typeGroupMap.gonglue=e.typeGroupMap.gonglve,o}return F(e,t),e.prototype.tagName=function(){return"notice"},e.prototype.tagAliases=function(){return["feedback","essence"]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,o,r,n){void 0===n&&(n=!1);var i=e.typeMap[o];return i?'<div data-tag="notice" data-notice-type="'+o+'" class="ambox"><table class="'+i.boxClass+'"><tbody><tr><td class="ambox-image"><img src="'+i.imgSrc+'"/></td><td class="ambox-notice"><span class="notice-bubble"><span class="notice-bubble-line"></span><i><b class="notice-speech">'+i.speech+'</b></i></span><br><span class="notice-text">'+i.notification+"</span></td></tr></tbody></table></div>":"[notice="+o+"]"},e.prototype.decodeFromHtml=function(t,o,r){var n=t.getAttribute("data-notice-type");return n&&e.typeMap[n]?"["+e.typeGroupMap[n]+"="+n+"]":""},e.typeMap={jutou:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/%E5%8F%AF%E9%9C%B2%E5%B8%8C%E5%B0%94_%E7%9C%8B%E4%B9%A6.png",boxClass:"ambox ambox-blue",speech:"博士，这几页我先帮你存着。",notification:"<b>本帖内容含剧透成分。</b>想要享受游戏探索/解谜乐趣的玩家请自行离开。"},rmt:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/20720aaac96bb824570ec92f651ffd7be84370b8.png",boxClass:"ambox ambox-blue",speech:"小心钱包（这句话是阿米娅说的）",notification:"<b>该帖子涉及现实货币交易。</b>请注意资产安全。"},predict:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/9156ab90139c76dbeb7420384c2ac691ab86097f.png",boxClass:"ambox ambox-blue",speech:"罗德岛的档案里没有诶...",notification:"<b>该帖子含推测内容。</b>请以官方消息为准，小心甄别。"},warn:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/20210626213733.png",boxClass:"ambox ambox-red",speech:"警告！博士你呀快被吊到舰桥上了哦...",notification:"<b>您的帖子已游走在违规边缘，请及时更改！</b>"},rec:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/4945b698209e2e73bc129a9026fc625a78ad8370.png",boxClass:"ambox ambox-violet",speech:"这个问题工程部已经知道啦！正在加班加点抢修！",notification:"<b>所反馈内容已记录</b>，请耐心等待。"},succ:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/02b4b87d4412f4a93d2f6d56f6479fd59918a7cc.png",boxClass:"ambox ambox-green",speech:"哼哼！这个问题已经解决啦！快称赞一下伟大的可露希尔！",notification:"<b>所反馈内容已解决</b>，请关注论坛公告。"},fail:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/32c0c66fb419b9ff5c8efb5ef967257627f8037d.png",boxClass:"ambox ambox-orange",speech:"啊呀...这个问题有点难...什么？伟大的可露希尔怎么可能不会！",notification:"所反馈内容由于各种原因<i>暂时</i>无法解决，请谅解。"},post:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"这篇文章写的好棒！要不偷偷的印出来卖钱吧？",notification:"您的帖子已达到加精标准，感谢您的付出！"},paint:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"这也太好看啦！能让我拿去观摩一下吗？嗯？不会偷偷卖钱啦！",notification:"您的帖子已达到加精标准，感谢您的付出！"},rpg:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"哦！这展开真是出乎意料啊！拍个电影吧！赚钱了我七你三！",notification:"您的帖子已达到加精标准，感谢您的付出！"},kaoju:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"什...什么！？这都能让你找出来的！挺不错的嘛！",notification:"您的帖子已达到加精标准，感谢您的付出！"},gonglve:{imgSrc:"https://gitee.com/nemo1166/img-gallery/raw/master/img/5a207be77f3457a726782c4c903186f3170d680a.png",boxClass:"ambox ambox-essence",speech:"居然比我可露希尔还要厉害...真有你的呀！",notification:"您的帖子已达到加精标准，感谢您的付出！"}},e.typeGroupMap={jutou:"notice",rmt:"notice",predict:"notice",warn:"notice",rec:"feedback",succ:"feedback",fail:"feedback",post:"essence",paint:"essence",rpg:"essence",kaoju:"essence",gonglve:"essence"},e}(o),I=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),D=function(t){function e(){var o=t.call(this)||this;return e.typeMap.video=e.typeMap.bvideo,e.typeGroupMap.video=e.typeGroupMap.bvideo,o}return I(e,t),e.prototype.tagName=function(){return"video"},e.prototype.tagAliases=function(){return["bvideo"]},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,o,r,n){if(void 0===n&&(n=!1),o&&0===o.indexOf("bv=")&&(o=o.substring(3)),!o)return"";var i=e.typeMap[t];if(!i)return"["+t+"="+o+"]";var a=e.typeGroupMap[t];return n?'<div data-tag="video" class="video" data-video-type="'+a.type+'" data-video-value="'+o+'">视频来源：<span class="video-type">'+a.name+'</span><br/>视频ID：<span class="video-value">'+o+"</span></div>":'<div data-tag="video">'+i.replace(/__VIDEO_VALUE__/g,o)+"</div>"},e.prototype.decodeFromHtml=function(t,o,r){var n=t.getAttribute("data-video-type"),i=t.getAttribute("data-video-value");return n&&i&&e.typeMap[n]?"["+e.typeGroupMap[n].type+"="+i+"]":""},e.typeMap={bvideo:'<iframe src="//player.bilibili.com/player.html?bvid=__VIDEO_VALUE__&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="95%" height="600"></iframe>'},e.typeGroupMap={bvideo:{name:"B站",type:"bvideo"}},e}(o),z=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),R=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return z(e,t),e.prototype.tagName=function(){return"smile"},e.prototype.match=function(t){return!!t.match(/^s(-\d+)+$/g)},e.prototype.isSelfClose=function(){return!0},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),"["+t+"]"},e.prototype.decodeFromHtml=function(t,e,o){return!1},e}(o),X=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),G=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return X(e,t),e.prototype.tagName=function(){return"bgcolor"},e.prototype.encodeToHtml=function(t,e,o,r){return void 0===r&&(r=!1),o?(e=this.checkColor(e))?'<span data-color="'+e+'" data-tag="bgcolor" style="background-color: '+e+'">'+o+"</span>":o:""},e.prototype.decodeFromHtml=function(t,e,o){return"[bgcolor="+t.getAttribute("data-color")+"]"+e(t.childNodes,o)+"[/bgcolor]"},e}(o),Y=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),q=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return Y(e,t),e.prototype.tagName=function(){return"align"},e.prototype.tagAliases=function(){return["left","right","center"]},e.prototype.encodeToHtml=function(t,e,o,r){if(void 0===r&&(r=!1),!o)return"";var n;if("align"===t){if("left"!==e&&"right"!==e&&"center"!==e)return!1;n=e}else n=t;return'<div style="text-align: '+n+'" data-tag="align">'+o+"</div>"},e.prototype.decodeFromHtml=function(t,e,o){var r=t.style.textAlign;return"["+r+"]"+e(t.childNodes,o)+"[/"+r+"]"},e}(o),$=function(){var t=function(e,o){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o])})(e,o)};return function(e,o){if("function"!=typeof o&&null!==o)throw new TypeError("Class extends value "+String(o)+" is not a constructor or null");function r(){this.constructor=e}t(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}}(),V=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return $(e,t),e.prototype.tagName=function(){return"table"},e.prototype.tagAliases=function(){return["tr","td"]},e.prototype.allowParents=function(t){switch(t){case"tr":return["table"];case"td":return["tr"];default:return[]}},e.prototype.encodeToHtml=function(t,e,o,r){void 0===r&&(r=!1);var n,i,a,c,s,l,p,u=this.splitArgs(e);switch(t){case"td":n=u.length>0?this.checkSize(u[0]):"",i=u.length>1?this.checkSize(u[1]):"",a=u.length>2?this.checkColor(u[2]):"",c=u.length>3?this.checkAlign(u[3]):"",s=u.length>4?this.checkAlign(u[4]):"";var f=u.length>5?parseInt(u[5])>1?parseInt(u[5]):0:"",y=u.length>6?parseInt(u[6])>1?parseInt(u[6]):0:"";return"<td"+this.combineAttributes({rowspan:f,colspan:y,style:this.combineStyles({width:n,height:i,"text-align":c,"vertical-align":s,"background-color":a})})+">"+o+"</td>";case"tr":return i=u.length>0?this.checkSize(u[0]):"",a=u.length>1?this.checkColor(u[1]):"","<tr"+this.combineAttributes({style:this.combineStyles({height:i,"background-color":a})})+">"+o+"</tr>";case"table":return n=u.length>0?this.checkSize(u[0]):"",i=u.length>1?this.checkSize(u[1]):"",a=u.length>2?this.checkColor(u[2]):"",c=u.length>3?this.checkAlign(u[3]):"",l=u.length>4?parseInt(u[4]):"",p=u.length>5?parseInt(u[5]):"","<table"+this.combineAttributes({align:c,cellspacing:l,cellpadding:p,style:this.combineStyles({width:n,height:i,"background-color":a})})+">"+o+"</table>";default:return!1}},e.prototype.decodeFromHtml=function(t,e,o){var r,n,i,a,c,s,l,p=t;switch(t.tagName.toLowerCase()){case"table":return r=this.checkSize(p.style.width),n=this.checkSize(p.style.height),i=this.checkColor(p.style.backgroundColor),a=this.checkAlign(p.align),s=parseInt(p.cellspacing),l=parseInt(p.cellpadding),"[table"+this.combineArgs([r,n,i,a,s,l])+"]"+e(t.childNodes,o)+"[/table]";case"tr":return n=this.checkSize(p.style.height),i=this.checkColor(p.style.backgroundColor),"[tr"+this.combineArgs([n,i])+"]"+e(t.childNodes,o)+"[/tr]";case"td":r=this.checkSize(p.style.width),n=this.checkSize(p.style.height),i=this.checkColor(p.style.backgroundColor),a=this.checkAlign(p.style.textAlign),c=this.checkAlign(p.style.verticalAlign);var u=parseInt(p.rowSpan)>1?parseInt(p.rowSpan):0,f=parseInt(p.colSpan)>1?parseInt(p.colSpan):0;return"[td"+this.combineArgs([r,n,i,a,c,u,f])+"]"+e(t.childNodes,o)+"[/td]";default:return!1}},e}(o),U=new i;U.registerTagHandler(new c),U.registerTagHandler(new l),U.registerTagHandler(new w),U.registerTagHandler(new O),U.registerTagHandler(new u),U.registerTagHandler(new y),U.registerTagHandler(new g),U.registerTagHandler(new m),U.registerTagHandler(new _),U.registerTagHandler(new E),U.registerTagHandler(new S),U.registerTagHandler(new N),U.registerTagHandler(new k),U.registerTagHandler(new P),U.registerTagHandler(new M),U.registerTagHandler(new L),U.registerTagHandler(new D),U.registerTagHandler(new R),U.registerTagHandler(new G),U.registerTagHandler(new q),U.registerTagHandler(new V),t.g.BBCODE={newParser:function(){return new i},defaultParser:U,bbcode2html:function(t,e){return void 0===e&&(e=!1),console.log("bbcode2html"),U.bbcode2html(t,e)},html2bbcode:function(t,e){return void 0===e&&(e=!1),console.log("html2bbcode"),U.html2bbcode(t,e)}}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,